{"version":3,"sources":["webpack:///./src/pages/covid-in-us.js"],"names":["CovidProject","data","className","fluid","covidPostHeader","childImageSharp","alt","href","sketch1","sketch2","viz1","viz2","viz3","query"],"mappings":"2FAAA,mHA2KeA,UAnKM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,0BAAMC,UAAU,mBAEpB,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CAAKC,MAAOF,EAAKG,gBAAgBC,gBAAgBF,MAAOG,IAAI,0BAA0BJ,UAAU,YAGpG,yBAAKA,UAAU,oBACX,6DACA,qFAGJ,yBAAKA,UAAU,gBACX,6BACI,uCACA,gDAEJ,6BACI,wCACA,wCAEJ,6BACI,wCACA,8EAEJ,6BACI,qCACA,wEAIR,iCACI,yBAAKA,UAAU,cACX,sDACA,weAKsD,uBAAGK,KAAK,4EAAR,mBALtD,0KAcR,6BAASL,UAAU,gBACf,yBAAKA,UAAU,cACX,8CACA,4DACA,2BAAG,iCAAH,+EACA,2BAAG,iCAAH,iFAEA,kSASR,iCACI,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAKC,MAAOF,EAAKO,QAAQH,gBAAgBF,MAAOG,IAAI,+FACpD,kIAGA,kBAAC,IAAD,CAAKH,MAAOF,EAAKQ,QAAQJ,gBAAgBF,MAAOG,IAAI,+DACpD,kGAGA,oFAEA,0XAQA,kBAAC,IAAD,CAAKH,MAAOF,EAAKS,KAAKL,gBAAgBF,MAAOG,IAAI,yCACjD,6LAKA,0EAEA,4nBAWA,iEAEA,6XAMA,kBAAC,IAAD,CAAKH,MAAOF,EAAKU,KAAKN,gBAAgBF,MAAOG,IAAI,4CACjD,iOAMA,yEAEA,gXAQA,gGAEA,uoBASA,kBAAC,IAAD,CAAKH,MAAOF,EAAKW,KAAKP,gBAAgBF,MAAOG,IAAI,mEACjD,oHAEA,8CAEA,qHAA0F,uBACtFC,KAAK,6BADiF,cAA1F,uOAoBb,IAAMM,EAAK","file":"component---src-pages-covid-in-us-js-0dd08419184a797d6fb0.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Helmet } from \"react-helmet\"\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n\n\nconst CovidProject = ({ data }) => {\n    return (\n        <Layout>\n            <Helmet>\n                <body className=\"covid-project\" />\n            </Helmet>\n            <div className=\"project-header\">\n                <Img fluid={data.covidPostHeader.childImageSharp.fluid} alt=\"covid project home page\" className=\"header\" />\n            </div>\n\n            <div className=\"wrap-small title\">\n                <h1>COVID-19 in the United States</h1>\n                <h2>Tracking the spread of COVID-19 in the United States</h2>\n            </div>\n\n            <div className=\"project-info\">\n                <div>\n                    <h2>Context</h2>\n                    <p>Personal project</p>\n                </div>\n                <div>\n                    <h2>Timeline</h2>\n                    <p>One week</p>\n                </div>\n                <div>\n                    <h2>My roles</h2>\n                    <p>Data visualization, web design and development</p>\n                </div>\n                <div>\n                    <h2>Tools</h2>\n                    <p>HTML, CSS, JavaScript, D3.js, Vega-Lite</p>\n                </div>\n            </div>\n\n            <section>\n                <div className=\"wrap-small\">\n                    <h3>Overview and objective</h3>\n                    <p>\n                        With the Coronavirus outbreak, many informative graphs and dashboards were created on the\n                        web. Having interacted with a number of them, I found them to be slow, unresponsive, and at\n                        times overwhelming. Frustrated with the slowness of news sites and dashboards, I decided to re-create some of the useful\n                        visualizations that I have seen around the web, with an emphasis on performance. I aimed to have the\n                    site load in less than 4 seconds, which is around the <a href=\"https://www.hobo-web.co.uk/your-website-design-should-load-in-4-seconds/\">ideal load\n                    time</a> for webpages. This would result in less frustrations for me and other users who are\n                    possibly going to be visiting the website every day to find the latest numbers.\n                    </p>\n\n\n                </div>\n            </section>\n\n            <section className=\"section-pink\">\n                <div className=\"wrap-small\">\n                    <h3>The components</h3>\n                    <p>The webpage has two sections:</p>\n                    <p><b>1.</b> Critical information about the coronavirus that every person needs to know</p>\n                    <p><b>2.</b> Visualizations which inform viewers on the latest numbers around the country</p>\n\n                    <p>While designing the layout, I was mindful of the implicit hierarchy of the data. I followed\n                    a\n                    top-down approach in representing information, starting with the overall number of cases and\n                    deaths\n                    in United States and breaking up the data based on U.S. states.\n                    </p>\n                </div>\n            </section>\n\n            <section>\n                <div className=\"wrap-small\">\n                    <Img fluid={data.sketch1.childImageSharp.fluid} alt=\"Website layout sketches where I identified the sections for visualizations and their order\" />\n                    <figcaption>Website layout sketches where I identified the sections for visualizations and their order\n                </figcaption>\n\n                    <Img fluid={data.sketch2.childImageSharp.fluid} alt=\"Early sketches for some of the visualiations I implemented\" />\n                    <figcaption>Early sketches for some of the visualiations I implemented</figcaption>\n\n\n                    <h3>Total COVID-19 cases and deaths in the United States</h3>\n\n                    <p>In order to compare the difference in cases and deaths, I decided to merge two scales in one\n                    visualization instead of using a unified scale or two separate visualizations. In the first\n                    case,\n                    since the number of cases are much larger than deaths, the line that represents deaths would\n                    have\n                    been flattened, making any form of comparison meaningless.\n                </p>\n\n                    <Img fluid={data.viz1.childImageSharp.fluid} alt=\"line chart of covid cases and deaths\" />\n                    <figcaption>\n                        First visualization: Line chart. Using two scales prevents flattening of \"deaths\" and still be able\n                        to compare the relative increase of each category\n                </figcaption>\n\n                    <h3>Challenges in showing multiple information</h3>\n\n                    <p> In the early version of this visualization, I used only one scale for showing both cases and deaths\n                    to simply the graph for the viewer. However, I found that a\n                    unified scale would have limited the red line (deaths) in the first sixth of the scale, looking\n                    almost flat. This wouldn't have been useful for demonstration purposes.\n                    Using separate\n                    axes, however, allowed me to observe the increase in deaths more accurately. In addition,\n                    the two metrics are comparable now. One can see the rate of change for each category, noticing\n                    that there has been a major increase in the number of deaths from mid-April.\n                </p>\n\n\n                    <h3>COVID-19 Map of cases in the U.S.</h3>\n\n                    <p>After the audience has looked at the historical data for the aforementioned metrics, they will be\n                    able to look at the overall number of cases in each state and easily compare the difference\n                    through the choropleth. Each state is coloured based on a logarithmic scale that goes from light\n                    pink (less than 100 cases) to dark pink (500K cases and above).\n                </p>\n\n                    <Img fluid={data.viz2.childImageSharp.fluid} alt=\"map of covid cases in the united states\" />\n                    <figcaption>The user can interact with this map by hovering over each state to see the specific number\n                    for\n                    each state. In the example below, Montana is hovered over, where it’s highlighted in black\n                </figcaption>\n\n\n                    <h3>Problem: Diverging colours or single hue?</h3>\n\n                    <p>A few visualizations which I had\n                    seen around the web had used diverging colours. However, such scheme usually indicates a\n                    phenomena that go in two opposite directions. The number of cases, however, is only going to\n                    increase—there is no positive side to this data. Using a single hue properly represents the\n                    sequential nature of the data.</p>\n\n\n\n                    <h3>COVID-19 deaths by state: How to compare differences in one area</h3>\n\n                    <p>While choropleths are sufficient for showing the relative different between states across a\n                    geographic area, I decided to use another form of visualization to show the difference in the\n                    number of deaths between each state. Here I used small multiples through a group of area charts\n                    that share a scale, allowing an easy comparison between the entirety of the data. Based on this\n                    visualization, it instantly becomes clear that New York and New Jersey are doing worse than\n                    other states in comparison. If that isn’t clear enough, their latest numbers which are placed at\n                    the end of their x-axis clearly illustrated that.\n                </p>\n\n                    <Img fluid={data.viz3.childImageSharp.fluid} alt=\"multiple line chart of covid cases in the us, divided by state\" />\n                    <figcaption>Using a single scale allows us to directly compare each state to one another</figcaption>\n\n                    <h3>Final thoughts</h3>\n\n                    <p>This project had quite a learning curve for me. I had primarily made visualizations on <a\n                        href=\"https://observablehq.com/\">Observable</a>&nbsp;in my notebooks using Vega-Lite \n                        and D3, but I had never\n                    implemented them on a website. However,\n                    wrapping up the project made me feel more confident in my ability to learn on my own and debug\n                    using Chrome’s developer tools.\n                </p>\n\n                </div>\n            </section>\n\n        </Layout>\n    )\n}\n\n\nexport default CovidProject\n\n\n\nexport const query = graphql`\nquery {\n    covidPostHeader: file(relativePath: {eq: \"covid-post.png\"}) {\n        childImageSharp {\n            fluid {\n                ...GatsbyImageSharpFluid_withWebp\n            }\n        }\n  },\n  sketch1: file(relativePath: {eq: \"covid-sketch.png\"}) {\n        childImageSharp {\n            fluid {\n                ...GatsbyImageSharpFluid_withWebp\n            }\n    }\n  },\n  sketch2: file(relativePath: {eq: \"covid-sketch2.png\"}) {\n        childImageSharp {\n            fluid {\n            ...GatsbyImageSharpFluid_withWebp\n            }\n        }\n    },\n    viz1: file(relativePath: {eq: \"viz1.png\"}) {\n        childImageSharp {\n            fluid {\n            ...GatsbyImageSharpFluid_withWebp\n            }\n        }\n    },\n    viz2: file(relativePath: {eq: \"viz2.png\"}) {\n        childImageSharp {\n            fluid {\n            ...GatsbyImageSharpFluid_withWebp\n            }\n        }\n    },\n    viz3: file(relativePath: {eq: \"viz3.png\"}) {\n        childImageSharp {\n            fluid {\n            ...GatsbyImageSharpFluid_withWebp\n            }\n        }\n    },\n}\n`"],"sourceRoot":""}